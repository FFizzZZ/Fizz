## Leetcode
```
class Solution:
    def __init__(self):
        self.ans = None
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        self.f(root, p, q)
        return self.ans
    def f(self, root, p, q):
        if not root: return False
        left = self.f(root.left, p, q)
        right = self.f(root.right, p, q)
        mid = root == p or root == q
        if left + right + mid == 2:
            self.ans = root
        return left or right or mid
```
