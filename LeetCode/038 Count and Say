class Solution:
    def countAndSay(self, n: int) -> str:
        res = ['1', '11', '21', '1211']
        for i in range(4, n):
            last = res[i-1]
            cur = ''
            index = 0
            for j in range(1, len(last)):
                if last[j] != last[j-1]:
                    cur += str(j - index) + last[j-1]
                    index = j
                if j == len(last) - 1:
                    cur += str(j - index + 1) + last[j]
            res.append(cur)
        return res[n-1]


How to prove that the following sequence will never contains number greater than 3:
https://math.stackexchange.com/questions/1409062/how-to-prove-that-the-following-sequence-will-never-contains-number-greater-than?newreg=30914ceb78ca4f38aa31de4416e3efdf

-------------------------------

* Solution 1 ... using a regular expression

def countAndSay(self, n):
    s = '1'
    for _ in range(n - 1):
        s = re.sub(r'(.)\1*', lambda m: str(len(m.group(0))) + m.group(1), s)
    return s
    
* Solution 2 ... using a regular expression

def countAndSay(self, n):
    s = '1'
    for _ in range(n - 1):
        s = ''.join(str(len(group)) + digit
                    for group, digit in re.findall(r'((.)\2*)', s))
    return s
    
* Solution 3 ... using groupby

def countAndSay(self, n):
    s = '1'
    for _ in range(n - 1):
        s = ''.join(str(len(list(group))) + digit
                    for digit, group in itertools.groupby(s))
    return s
