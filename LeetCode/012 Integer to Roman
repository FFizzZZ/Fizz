class Solution:
    def intToRoman(self, num: 'int') -> 'str':
        res = ''
        m, num = num // 1000, num % 1000
        res = res + 'M' * m
        if num // 100 == 9:
            res = res + 'CM'
        elif num // 100 == 4:
            res = res + 'CD'
        elif num >= 500:
            res = res + 'D' + 'C' * ((num - 500) // 100)
        else:
            res = res + 'C' * (num // 100)
            
        num = num % 100
        if num // 10 == 9:
            res = res + 'XC'
        elif num // 10 == 4:
            res = res + 'XL'
        elif num >= 50:
            res = res + 'L' + 'X' * ((num-50) // 10)
        else:
            res = res + 'X' * (num // 10)
            
        num = num % 10
        if num == 9:
            res = res + 'IX'
        elif num == 4:
            res = res + 'IV'
        elif num >= 5:
            res = res + 'V' + 'I' * (num-5)
        else:
            res = res + 'I' * num
        return res
        
        
### 
class Solution:
    def intToRoman(self, num: 'int') -> 'str':
        M = ["", "M", "MM", "MMM"]
        C = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"]
        X = ["", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"]
        I = ["", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"]
        return M[num//1000] + C[(num%1000)//100] + X[(num%100)//10] + I[num%10]
        
###
class Solution:
    def intToRoman(self, num: 'int') -> 'str':
        values = [ 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 ]
        numerals = [ "M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I" ]
        res, i = "", 0
        while num:
            res += (num//values[i]) * numerals[i]
            num %= values[i]
            i += 1
        return res
        
        
