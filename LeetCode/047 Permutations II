class Solution:
    def permuteUnique(self, nums):
        res = []
        nums.sort()
        def f(num, path):
            if not num: 
                res.append(path)
                return
            for i in range(len(num)):
                if i > 0 and num[i] == num[i-1]: continue
                f(num[:i]+num[i+1:], path+[num[i]])
        f(nums, [])
        return res

------------------------------

class Solution:
    def permuteUnique(self, nums):
        ans = [[]]
        for n in nums:
            new_ans = []
            for l in ans:
                for i in range(len(l)+1):
                    new_ans.append(l[:i]+[n]+l[i:])
                    if i<len(l) and l[i]==n: break     #handles duplication
            ans = new_ans
        return ans
