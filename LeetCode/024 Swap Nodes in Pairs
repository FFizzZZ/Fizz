# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def swapPairs(self, head: 'ListNode') -> 'ListNode':
        res = pts = ListNode(0)
        while head and head.next:
            a, b = head, head.next
            pts.next = b
            a.next = b.next
            b.next = a
            head = head.next
            pts = pts.next.next
            res
        if head:
            pts.next = head
        return res.next
            
-----------------------------------------------------------        

# Recursively
class Solution:
    def swapPairs(self, head):
        if head and head.next:
            tmp = head.next
            head.next = self.swapPairs(tmp.next)
            tmp.next = head
            return tmp
        return head
        
# Iteratively
class Solution:
    def swapPairs(self, head):
        dummy = p = ListNode(0)
        dummy.next = head
        while head and head.next:
            tmp = head.next
            head.next = tmp.next
            tmp.next = head
            p.next = tmp
            head = head.next
            p = tmp.next
        return dummy.next
        
