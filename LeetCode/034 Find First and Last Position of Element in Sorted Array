# slow 
```
class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        if not nums: return [-1, -1]
        if len(nums) == 1:
            if nums[0] == target:
                return [0, 0]
            else:
                return [-1, -1]
        first, last = 0, len(nums) - 1
        index = -1
        while first <= last:
            mid = (first + last) // 2
            if nums[mid] == target:
                index = mid
            if nums[mid] < target:
                first += 1
            else:
                last -= 1
        if index == -1: return [-1, -1]
        res1 = res2 = index
        for i in range(index, 0, -1):
            if nums[i] != nums[i-1]:
                res1 = i
                break
        if res1 == 1 and nums[1] == nums[0]: res1 = 0
        for i in range(index, len(nums)-1):
            if nums[i] != nums[i+1]:
                res2 = i
                break
        if i == len(nums) - 2 and nums[-2] == nums[-1]: res2 = len(nums) - 1
        return [res1, res2]
                
            
            
        
        
```




------------------------
